// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskItem list test TaskItem renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskItem
    deleteTask={[Function]}
    editTask={[Function]}
    isAnyTaskEditing={false}
    selected={Array []}
    taskData={
      Object {
        "id": 123,
        "title": "mockTitle",
      }
    }
    toggleEditing={[Function]}
    toggleSelectTask={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="task-text"
        >
          mockTitle
        </span>,
        <button
          className="btn-icon"
          onClick={[Function]}
        >
          <i
            className="fa fa-trash"
          />
        </button>,
        <button
          className="btn-toggle-edit btn-icon"
          onClick={[Function]}
        >
          <i
            className="fa fa-edit"
          />
        </button>,
        <button
          className="btn-icon"
          onClick={[Function]}
        >
          <i
            className="fa fa-check"
          />
        </button>,
      ],
      "className": "task-item",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "mockTitle",
          "className": "task-text",
        },
        "ref": null,
        "rendered": "mockTitle",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-trash"
          />,
          "className": "btn-icon",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-trash",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-edit"
          />,
          "className": "btn-toggle-edit btn-icon",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-edit",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-check"
          />,
          "className": "btn-icon",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-check",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="task-text"
          >
            mockTitle
          </span>,
          <button
            className="btn-icon"
            onClick={[Function]}
          >
            <i
              className="fa fa-trash"
            />
          </button>,
          <button
            className="btn-toggle-edit btn-icon"
            onClick={[Function]}
          >
            <i
              className="fa fa-edit"
            />
          </button>,
          <button
            className="btn-icon"
            onClick={[Function]}
          >
            <i
              className="fa fa-check"
            />
          </button>,
        ],
        "className": "task-item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "mockTitle",
            "className": "task-text",
          },
          "ref": null,
          "rendered": "mockTitle",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-trash"
            />,
            "className": "btn-icon",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-trash",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-edit"
            />,
            "className": "btn-toggle-edit btn-icon",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-edit",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-check"
            />,
            "className": "btn-icon",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-check",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
